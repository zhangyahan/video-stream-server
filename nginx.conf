# nginx.conf  --  docker-openresty
#
# This file is installed to:
#   `/usr/local/openresty/nginx/conf/nginx.conf`
# and is the file loaded by nginx at startup,
# unless the user specifies otherwise.
#
# It tracks the upstream OpenResty's `nginx.conf`, but removes the `server`
# section and adds this directive:
#     `include /etc/nginx/conf.d/*.conf;`
#
# The `docker-openresty` file `nginx.vh.default.conf` is copied to
# `/etc/nginx/conf.d/default.conf`.  It contains the `server section
# of the upstream `nginx.conf`.
#
# See https://github.com/openresty/docker-openresty/blob/master/README.md#nginx-config-files
#

#user  nobody;
#worker_processes 1;

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;



#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  4096;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    # Enables or disables the use of underscores in client request header fields.
    # When the use of underscores is disabled, request header fields whose names contain underscores are marked as invalid and become subject to the ignore_invalid_headers directive.
    # underscores_in_headers off;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

        # Log in JSON Format
        # log_format nginxlog_json escape=json '{ "timestamp": "$time_iso8601", '
        # '"remote_addr": "$remote_addr", '
        #  '"body_bytes_sent": $body_bytes_sent, '
        #  '"request_time": $request_time, '
        #  '"response_status": $status, '
        #  '"request": "$request", '
        #  '"request_method": "$request_method", '
        #  '"host": "$host",'
        #  '"upstream_addr": "$upstream_addr",'
        #  '"http_x_forwarded_for": "$http_x_forwarded_for",'
        #  '"http_referrer": "$http_referer", '
        #  '"http_user_agent": "$http_user_agent", '
        #  '"http_version": "$server_protocol", '
        #  '"nginx_access": true }';
        # access_log /dev/stdout nginxlog_json;

    # See Move default writable paths to a dedicated directory (#119)
    # https://github.com/openresty/docker-openresty/issues/119
    client_body_temp_path /var/run/openresty/nginx-client-body;
    proxy_temp_path       /var/run/openresty/nginx-proxy;
    fastcgi_temp_path     /var/run/openresty/nginx-fastcgi;
    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;
    scgi_temp_path        /var/run/openresty/nginx-scgi;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # Don't reveal OpenResty version to clients.
    # server_tokens off;

    client_max_body_size 100m;

    server {
        listen       18080;
        server_name  localhost;

        # video thumbs
        location ~ /thumbs(.*) {
            video_thumbextractor;
            video_thumbextractor_video_filename    $1;
            video_thumbextractor_video_second      $arg_second;
            video_thumbextractor_image_width       $arg_width;
            video_thumbextractor_image_height      $arg_height;
        }

        # nginx-http-flv-module 拉流地址配置 http://localhost:8080/livevideo?port=11935&app=livevideo&stream=stream
        location /livevideo { 
            flv_live on; # 开启直播
            chunked_transfer_encoding on; # 支持 'Transfer-Encoding: chunked' 方式回复
            add_header 'Access-Control-Allow-Origin' '*'; # 添加额外的 HTTP 头
            add_header 'Access-Control-Allow-Credentials' 'true'; # 添加额外的 HTTP 头
        }

        #推流播放和录制统计数据的配置
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        # 指定 stat.xsl 的位置
        location /stat.xsl {
            root /usr/local/openresty/nginx/rtmp; 
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
        }
    }
}


rtmp_auto_push on;
rtmp_auto_push_reconnect 1s;
rtmp_socket_dir /tmp;

rtmp {
    out_queue           4096;
    out_cork            8;
    max_streams         128;
    timeout             15s;
    drop_idle_publisher 15s;

    server {
        listen 11935;
        server_name localhost;

        application livevideo {
            live on;
            gop_cache off; # 关闭缓存, 优化视频延迟

            notify_method get; # 将通知请求的方法修改为GET请求
            on_play http://192.168.30.26:8080/livevideo/play; # 判断拉流权限的接口
            on_play_done http://192.168.30.26:8080/livevideo/play_done; # 停止拉流
            on_publish http://192.168.30.26:8080/livevideo/publish; # 判断推流权限的接口
            on_publish_done http://192.168.30.26:8080/livevideo/publish_done; # 停止推流
        }
    }
}